<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
	<property name="LOGS_PATH" value="./logs" />
	<property name="LOGS_LEVEL" value="INFO" />

	<appender name="STDOUT"
		class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>[%d{HH:mm:ss}:%-3relative][%thread] %-5level
				%logger{36} -
				%msg%n</Pattern>
		</layout>
	</appender>

	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOGS_PATH}/log_file.log</file> <!-- 파일을 저장할 경로를 정한다 -->
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>INFO</level> 
			<onMatch>ACCEPT</onMatch> 해당 레벨만 기록한다. <onMismatch>DENY</onMismatch> 다른 수준의 
			레벨은 기록하지 않는다.(상위 레벨도 기록 안함), 상위 수준의 레벨에 대한 기록을 원하면 ACCEPT 로 하면 기록된다. </filter> 
			레벨별 필터링이 필요없을 경우 filter class 관련된 부분을 삭제하면 됨 -->
		<encoder>
			<pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level
				%logger{35} - %msg%n</pattern> <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨 -->
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOGS_PATH}/%d{yyyy-MM-dd}_%i.log
			</fileNamePattern> <!-- 해당 패턴 네이밍으로 이전 파일이 기록됨 -->
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize> <!-- 한 파일의 최대 용량 -->
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>60</maxHistory> <!-- 한 파일의 최대 저장 기한 -->
		</rollingPolicy>
	</appender>

	<appender name="ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOGS_PATH}/error_file.log</file> <!-- 파일을 저장할 경로를 정한다 -->
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>INFO</level> 
			<onMatch>ACCEPT</onMatch> 해당 레벨만 기록한다. <onMismatch>DENY</onMismatch> 다른 수준의 
			레벨은 기록하지 않는다.(상위 레벨도 기록 안함), 상위 수준의 레벨에 대한 기록을 원하면 ACCEPT 로 하면 기록된다. </filter> 
			레벨별 필터링이 필요없을 경우 filter class 관련된 부분을 삭제하면 됨 -->
		<encoder>
			<pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level
				%logger{35} - %msg%n</pattern> <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨 -->
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOGS_PATH}/%d{yyyy-MM-dd}_error.log
			</fileNamePattern> <!-- 해당 패턴 네이밍으로 이전 파일이 기록됨 -->
			<maxHistory>30</maxHistory> <!-- 한 파일의 최대 저장 기한 -->
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 에러로그를 설정하고 로그의 레벨이 맞으면 onMatch, 아니라면 onMismatch -->
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<root level="${LOGS_LEVEL}">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="FILE" />
		<appender-ref ref="ERROR" />
	</root>
</configuration>